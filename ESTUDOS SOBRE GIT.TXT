Para a instalação do GIT, o endereço é: git-scm.com

//---
Após o dowload, já escolhida a versão apropriada, verifica-se no GIT, o branch "ramificação" 
- que é aquela que vai estar ativa, o nome é "master", diferentemente do GITHUB, o branch é "main"
Portanto, é possível igualar, quando da instalação, ambos para "main"
//---

É possível utilizar o CMD, GIT bash, ou mesmo vincular o uso do GIT vinculado ao VisualCode 
- a vinculação deve ser realizada quando da instalação do GIT

//---

Após a instalação, para confirmar que está funcionando corretamente, no prompt de comando deve-se
digitar o seguinte comando:

git --version

Se estiver correta a instalação, aparecerá a versão instalada

Interessante ficar atento para a característica específica dos comandos em GIT, pois, em sua linguagem
os comandos nativos são precedidos de dois traços: ex. --help

//---

CONFIGURANDO CREDENCIAIS
Para configurar o usar name e e-mail, devem ser utilizados os seguintes comandos:

git config --global user.name "dev" (entre as aspas deve ser inserido o user name)
Para verificar o user name configurado, deve ser usado o comando:
git config user.name

git config --global user.email "@gmail.com" (entre as aspas deve ser inserido o user name)
Para verificar o user name configurado, deve ser usado o comando:
git config user.email

FUNDAMENTOS
//---

* Repositório (repo) --- online e offline
Local onde os arquivos e projetos ficam armazenados 
Gerenciameento de versões - features (recursos, característica)

GitHub é um serviço de hospedagem para gerenciamemento de repositórios - serviço semelhante, pode ser encontrado no bitbucket
Pode ser armazenado de forma privada ou pública

//---

COMANDOS git, para a criação (inicialização - git init)

Uma vez já instalado o GIT no computador, selecionada a respectiva pasta com os arquivos, no terminal, deve ser escrito o seguinte comando:
git init

Para selecionar a respectiva pasta, podem ser inseridos os seguintes comandos:
1º - deve ser selecionado o hd onde se encontra a pasta: por. ex. d:
2º - deve ser chamada a pasta com o seguinte comando: cd pasta
3º - eventualmente, caso haja uma subpasta, deve ser chamada com o mesmo comando: cd subpasta
4º - caso ainda não tenha sido inicializado o repositório da respectiva pasta, é possível verificar essa condição a partir do seguinte comando:
git status
A mensagem de retorno demonstrará se há ou não um repositório na pasta

Para inicializar o projeto num repositório, deve ser usado o comando:
git init
Com esse comando, a respectiva pasta começa a ser reconhecida como um repositório git
A pasta relacionada ao repositório é uma pasta oculta do tipo .git

Nessa etapa, ainda será necessário realizar a adição com o camando, para que os arquivos de determinada pasta seja monitorado pelo git 
git add (deve ser colocado o nome do arquivo com sua respectiva extensão, por ex. nomedoarquivo.txt)
caso queira adicionar todos os arquivos da pasta, basta escrever o comando: git add . (espaço e ponto, para pegar todos os arquivos e todas as extensões)



Posteriormente, será necessário realizar o "commit"






